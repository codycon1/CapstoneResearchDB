Index: home/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/home/migrations/0001_initial.py b/home/migrations/0001_initial.py
new file mode 100644
--- /dev/null	(date 1650474005092)
+++ b/home/migrations/0001_initial.py	(date 1650474005092)
@@ -0,0 +1,40 @@
+# Generated by Django 3.2.12 on 2022-04-20 17:00
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Project',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('email', models.EmailField(max_length=256)),
+                ('date', models.DateField(auto_now=True)),
+                ('projectAuthor', models.CharField(max_length=128)),
+                ('projectTitle', models.CharField(max_length=100, verbose_name='Project Title')),
+                ('projectDescription', models.CharField(max_length=256, verbose_name='Project Description')),
+                ('proposalFile', models.FileField(upload_to='projects/proposals')),
+                ('dataFile', models.FileField(null=True, upload_to='projects/datasets', verbose_name='Data')),
+                ('resultFile', models.FileField(null=True, upload_to='projects/results', verbose_name='Results')),
+                ('approval', models.BooleanField(default=False)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='ProjectFile',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('userEmail', models.EmailField(max_length=256)),
+                ('file', models.FileField(upload_to='projects/')),
+                ('uploadDate', models.DateTimeField(auto_now=True)),
+                ('projectID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.project')),
+            ],
+        ),
+    ]
Index: users/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/migrations/0001_initial.py b/users/migrations/0001_initial.py
new file mode 100644
--- /dev/null	(date 1650303908180)
+++ b/users/migrations/0001_initial.py	(date 1650303908180)
@@ -0,0 +1,42 @@
+# Generated by Django 3.2.12 on 2022-04-18 17:45
+
+from django.db import migrations, models
+import django.utils.timezone
+import users.models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('auth', '0012_alter_user_first_name_max_length'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='RUser',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('password', models.CharField(max_length=128, verbose_name='password')),
+                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
+                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
+                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
+                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
+                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
+                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
+                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
+                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
+                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
+                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
+            ],
+            options={
+                'verbose_name': 'user',
+                'verbose_name_plural': 'users',
+                'abstract': False,
+            },
+            managers=[
+                ('objects', users.models.StandardUserManager()),
+            ],
+        ),
+    ]
Index: templates/approveproposal.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html' %}\n\n{% block content %}\n    <h1>Pending proposals</h1>\n    <table>\n    <thead>\n        <tr>\n            <th>Project Title</th>\n            <th>Project Author</th>\n            <th>General Project Files</th>\n            <th>Data Files</th>\n            <th>Result Files</th>\n            <th>Approve</th>\n            <th>Delete</th>\n        </tr>\n    </thead>\n    <tbody>\n    {% for item in pending %}\n        <form method=\"post\">\n            {% csrf_token %}\n            <td>{{ item.projectTitle }}</td>\n            <td>{{ item.projectAuthor }}</td>\n            <td><a href=\"{{ item.file }}\"><button type=\"button\">Download</button></a></td>\n            <td><a href=\"{{ item.dataFiles }}\"><button type=\"button\">Datasets</button></a></td>\n            <td><a href=\"{{ item.resultFiles }}\"><button type=\"button\">Results</button></a></td>\n            <td><input type=\"submit\" class=\"btn btn-secondary\" name=\"approve\" value=\"Approve\"></td>\n            <td><input type=\"submit\" class=\"btn btn-secondary\" name=\"delete\" value=\"Delete\"></td>\n            <input type=\"hidden\" name=\"id\" value=\"{{ item.id }}\">\n        </form>\n        </tbody>\n    {% endfor %}\n    </table>\n{% endblock %}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/approveproposal.html b/templates/approveproposal.html
--- a/templates/approveproposal.html	(revision ca5000427e09a95647aa54968fe05ac7fa1cf4b2)
+++ b/templates/approveproposal.html	(date 1650646736045)
@@ -20,9 +20,9 @@
             {% csrf_token %}
             <td>{{ item.projectTitle }}</td>
             <td>{{ item.projectAuthor }}</td>
-            <td><a href="{{ item.file }}"><button type="button">Download</button></a></td>
-            <td><a href="{{ item.dataFiles }}"><button type="button">Datasets</button></a></td>
-            <td><a href="{{ item.resultFiles }}"><button type="button">Results</button></a></td>
+            <td><a href="{{ item.file.url }}"><button type="button">Download</button></a></td>
+            <td><a href="{{ item.dataFiles.url }}"><button type="button">Datasets</button></a></td>
+            <td><a href="{{ item.resultFiles.url }}"><button type="button">Results</button></a></td>
             <td><input type="submit" class="btn btn-secondary" name="approve" value="Approve"></td>
             <td><input type="submit" class="btn btn-secondary" name="delete" value="Delete"></td>
             <input type="hidden" name="id" value="{{ item.id }}">
diff --git a/users/migrations/__init__.py b/users/migrations/__init__.py
new file mode 100644
diff --git a/home/migrations/__init__.py b/home/migrations/__init__.py
new file mode 100644
